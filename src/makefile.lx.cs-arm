# Makefile to build the libsiglib.a archive library for Linux target using Code Sorcery gcc
# NOTE - Remember all the usual TAB, SPACE rules!

# library target to be built
# change the name if I want library to be rebuilt for different model
LIB1=siglib-cs-arm

# object file list which makes up the library
OBJS1=acoustic.o \
	adaptive.o \
	arbfft.o \
	chirpz.o \
	comms.o \
	complex.o \
	complexa.o \
	control.o \
	convolve.o \
	correlate.o \
	datatype.o \
	decint.o \
	delay.o \
	dsputil3.o \
	dsputil2.o \
	dsputils.o \
	dtmf.o \
	fdfilter.o \
	ffourier.o \
	file_io.o \
	filter.o \
	firfilt.o \
	fourier.o \
	icoder.o \
	iirfilt.o \
	image.o \
	machinelearning.o \
	matrix.o \
	minmax.o \
	mod_a.o \
	mod_d.o \
	modem.o \
	mux.o \
	order.o \
	prbs.o \
	pspect.o \
	regress.o \
	siggen.o \
	siglib.o \
	smath.o \
	speech.o \
	stats.o \
	timing.o \
	trig.o \
	viterbi.o \
	window.o

INC=-I.

# User flags
USER_CFLAGS= -I ../include -O3 -mcpu=cortex-a8 -mfpu=neon -ftree-vectorize -mfloat-abi=softfp -ffast-math -fsingle-precision-constant

# C compiler flags.  Note that "$(ARCH_CFLAGS)" is appended to the end.
CFLAGS=$(USER_CFLAGS) $(ARCH_CFLAGS) -Wall

#CC=arm-none-linux-gnueabi-g++
#CC=arm-none-linux-gnueabi-c++
CC=arm-none-linux-gnueabi-gcc
AR=arm-none-linux-gnueabi-ar

### clear out all of the implicit suffixes generated by make
.SUFFIXES:

### compile all the .c files into .obj...remove old ones first
### so I dont forget...$@ is LHS ie .obj, $< is dependent RHS ie .c

%.o: %.c
	@if [ -f $@ ]; then rm $@; fi;
	$(CC) $(CFLAGS) $(INC) -c -o $@ $<

### targets
all: lib$(LIB1).a

### build the library using the archiver
### r option replaces filenames with new ones in same dir ie no copy made
lib$(LIB1).a: $(OBJS1)
	@$(RM) $@
	$(AR) cr $@ $(OBJS1)
	cp libsiglib-cs-arm.a ../lib/linux/
	rm -f *.o
	rm -f *.bak

clean:
	@echo =-=-=-=-=- Cleaning $(NAME) =-=-=-=-=-
	rm -rf *.o core *~ *.bak
